{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/file-upload.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { FileUploadService } from './file-upload.service';\nimport { HttpClient, HttpEventType, HttpResponse,HttpErrorResponseÂ  } from '@angular/common/http';\nimport { ProcessedStatement } from './processed-statement';\nimport { ErrorRecords } from './error-records';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  selectedFiles: FileList;\n  fileToUpload: File = null;\n  filePath: String;\n  public process: ProcessedStatement;\n  title = 'File-Upload-Save';\n  currentFileUpload: File;\n  progress: { percentage: number } = { percentage: 0 };\n  selectedFile = null;\n  changeImage = false;\n  isVisible= false;\n  displayProcessSection=false;\n  isUnSupportedFile=false;\n  result : {};\n  errorRecords: {};\n  errorMessage={};\n  constructor(private uploadService: FileUploadService) { }\n\n\n  processStatement() {\n   \n    this.uploadService.getProcessedData().subscribe(data =>\n      {\n      this.result = data.result,\n      this.errorRecords= data.errorRecords;\n      }\n    );\n      console.log(this.result)\n      this.isVisible=!this.isVisible;\n      \n    \n\n  }\n\n  change($event) {\n    this.changeImage = true;\n  \n  }\n\n  changedImage(event) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  upload() {\n    this.progress.percentage = 0;\n    this.isUnSupportedFile  = false;\n    this.currentFileUpload = this.selectedFiles.item(0);\n    this.displayProcessSection= !this.displayProcessSection;\n    this.uploadService.postFile(this.currentFileUpload).subscribe(event => {\n      if (event.type === HttpEventType.UploadProgress) {\n        this.progress.percentage = Math.round(100 * event.loaded / event.total);\n        console.log(this.progress.percentage);\n      } else if (event instanceof HttpResponse) {\n        this.isUnSupportedFile  = false;\n        this.displayProcessSection= !this.displayProcessSection;\n        if(event.status ==200)\n        console.log(event.status);\n      }\n      else{\n        console.log(\"File Not Supported Error\");\n        this.errorMessage=event.type;\n        this.isUnSupportedFile  = true; \n        this.displayProcessSection= !this.displayProcessSection;     \n      }\n     \n\n      this.selectedFiles = undefined;\n    }\n    );\n  }\n\n  selectFile(event) {\n    this.selectedFiles = event.target.files;\n  }\n}\n","<div> \n    <label for=\"customFile\"> Kindly upload  Customer Statement to be processed:</label>\n    <input type=\"file\" id=\"customFile\" (change)=\"selectFile($event)\"> \n   \n<button class=\"btn btn-primary\" [disabled]=\"!selectedFiles\" style=\"margin-left: 5px\" (click)=\"upload()\">Upload</button> \n<br>\n<br>\n<div *ngIf=\"isUnSupportedFile\">\n        <h3 style=\"text-align: left;color: red\">****File Not Supported. Upload .json format file</h3>\n</div>\n<div *ngIf=\"displayProcessSection\">\n<p > Your statement is uploaded successfully!!</p>\n<label > Click on the Process button to process the statement:</label>\n<button class=\"btn btn-primary\" style=\"margin-left: 5px\" (click)=\"processStatement()\"> Start Process</button></div>\n</div>\n<br>\n<div *ngIf=\"isVisible\">\n<h2 style=\"text-align: center;background-color: lime\">Please find the statement report below</h2>\n<div> <h3 style=\"color: rgb(17, 0, 255)\"> Result:  </h3> {{ result | json }}</div> \n<div><h3  style=\"color: rgb(17, 0, 255)\"> Errors :</h3>  {{  errorRecords | json}}</div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {ProcessedStatement} from './processed-statement';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileUploadService {\n\nconstructor(private https: HttpClient) { }\n\npostFile(file: File): Observable<HttpEvent<{}>> {\n    const data: FormData = new FormData();\n    // data.append()\n    // console.log(file.size +\"***** \"+file.name)\n    data.append('file', file);\n\n    const newRequest = new HttpRequest('POST', 'http://localhost:8080/rabobank/savefile', data, {\n      reportProgress: true,\n      responseType: 'text'\n    });\n\n    return this.https.request(newRequest);\n  }\n\n  getProcessedData(): Observable<ProcessedStatement>{\n    return this.https.get<ProcessedStatement>('http://localhost:8080/rabobank/processStatement');\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}